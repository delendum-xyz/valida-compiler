//===-- DelendumSubtarget.h - Subtarget for the Delendum VM -----*- C++ -*-===//
//
//                     The LLVM Compiler Infrastructure
//
// This file is distributed under the University of Illinois Open Source
// License. See LICENSE.TXT for details.
//
//===----------------------------------------------------------------------===//
//
// This file declares the Delendum specific subclass of TargetSubtargetInfo.
//
//===----------------------------------------------------------------------===//

#ifndef DELENDUMSUBTARGET_H
#define DELENDUMSUBTARGET_H

#include "DelendumInstrInfo.h"
#include "DelendumISelLowering.h"
#include "DelendumFrameLowering.h"

#include "llvm/CodeGen/GlobalISel/CallLowering.h"
#include "llvm/CodeGen/SelectionDAGTargetInfo.h"
#include "llvm/CodeGen/TargetSubtargetInfo.h"
#include "llvm/MC/MCInstrItineraries.h"
#include <string>

#define GET_SUBTARGETINFO_HEADER
#include "DelendumGenSubtargetInfo.inc"

namespace llvm {
class StringRef;

class DelendumSubtarget : public DelendumGenSubtargetInfo {
  virtual void anchor();

  DelendumInstrInfo InstrInfo;
  DelendumTargetLowering TLInfo;
  SelectionDAGTargetInfo TSInfo;
  DelendumFrameLowering FrameLowering;

  const DelendumTargetMachine &TM;

public:
  DelendumSubtarget(const Triple &TT, StringRef CPU,
                    StringRef FS, const DelendumTargetMachine &TM);

  const DelendumInstrInfo *getInstrInfo() const override { return &InstrInfo; }
  const TargetFrameLowering *getFrameLowering() const override {
    return &FrameLowering;
  }
  const DelendumRegisterInfo *getRegisterInfo() const override {
    return &InstrInfo.getRegisterInfo();
  }
  const DelendumTargetLowering *getTargetLowering() const override {
    return &TLInfo;
  }

  const SelectionDAGTargetInfo *getSelectionDAGInfo() const override {
    return &TSInfo;
  }

  /// ParseSubtargetFeatures - Parses features string setting specified
  /// subtarget options.  Definition of function is auto generated by tblgen.
  void ParseSubtargetFeatures(StringRef CPU, StringRef TuneCPU, StringRef FS);
  DelendumSubtarget &initializeSubtargetDependencies(StringRef CPU, StringRef FS);

protected:
  // GlobalISel related APIs.
  std::unique_ptr<CallLowering> CallLoweringInfo;

public:
  const CallLowering *getCallLowering() const override;

};
} // End llvm namespace

#endif
